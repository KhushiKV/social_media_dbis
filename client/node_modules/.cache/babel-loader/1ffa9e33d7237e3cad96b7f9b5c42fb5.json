{"ast":null,"code":"import { configureStore, createSlice, applyMiddleware } from \"@reduxjs/toolkit\";\nconst initialState = {\n  value: {\n    id: \"\",\n    username: \"\"\n  }\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      state.value = action.payload;\n    },\n    logout: state => {\n      state = initialState;\n    }\n  }\n});\nexport const {\n  login,\n  logout\n} = userSlice.actions;\nexport const store = configureStore({\n  reducer: {\n    user: userSlice.reducer\n  }\n});","map":{"version":3,"names":["configureStore","createSlice","applyMiddleware","initialState","value","id","username","userSlice","name","reducers","login","state","action","payload","logout","actions","store","reducer","user"],"sources":["/Users/abhinavkumar/Desktop/dbms/client/src/store.js"],"sourcesContent":["import { configureStore, createSlice, applyMiddleware } from \"@reduxjs/toolkit\";\n\n\nconst initialState = { value: { id: \"\", username: \"\" } };\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      state.value = action.payload;\n    },\n\n    logout: (state) => {\n      state = initialState;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const store = configureStore({\n  reducer: {\n    user: userSlice.reducer,\n  }\n});\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,EAAsCC,eAAtC,QAA6D,kBAA7D;AAGA,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE;IAAEC,EAAE,EAAE,EAAN;IAAUC,QAAQ,EAAE;EAApB;AAAT,CAArB;AAEA,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,MADsB;EAE5BL,YAF4B;EAG5BM,QAAQ,EAAE;IACRC,KAAK,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACxBD,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAArB;IACD,CAHO;IAKRC,MAAM,EAAGH,KAAD,IAAW;MACjBA,KAAK,GAAGR,YAAR;IACD;EAPO;AAHkB,CAAD,CAA7B;AAcA,OAAO,MAAM;EAAEO,KAAF;EAASI;AAAT,IAAoBP,SAAS,CAACQ,OAApC;AAEP,OAAO,MAAMC,KAAK,GAAGhB,cAAc,CAAC;EAClCiB,OAAO,EAAE;IACPC,IAAI,EAAEX,SAAS,CAACU;EADT;AADyB,CAAD,CAA5B"},"metadata":{},"sourceType":"module"}