{"ast":null,"code":"const utils = require(\"../utils\");\n\nconst call_account_api = require('../api_client/call_account_api');\n\nconst {\n  pickOnlyExistingValues\n} = utils;\n/**\n * @desc Lists sub-accounts.\n * @param [enabled] {boolean} - Whether to only return enabled sub-accounts (true) or disabled accounts (false).\n *                              Default: all accounts are returned (both enabled and disabled).\n * @param [ids] {number[]} - A list of up to 100 sub-account IDs. When provided, other parameters are ignored.\n * @param [prefix] {string} - Returns accounts where the name begins with the specified case-insensitive string.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\nfunction sub_accounts(enabled) {\n  let ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let prefix = arguments.length > 2 ? arguments[2] : undefined;\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  let callback = arguments.length > 4 ? arguments[4] : undefined;\n  let params = {\n    enabled,\n    ids,\n    prefix\n  };\n  let uri = ['sub_accounts'];\n  return call_account_api('GET', uri, params, callback, options);\n}\n/**\n * @desc Retrieves the details of the specified sub-account.\n * @param sub_account_id {string} - The ID of the sub-account.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\n\nfunction sub_account(sub_account_id) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let callback = arguments.length > 2 ? arguments[2] : undefined;\n  let uri = ['sub_accounts', sub_account_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n/**\n * @desc Creates a new sub-account. Any users that have access to all sub-accounts will also automatically have access\n *       to the new sub-account.\n * @param name {string} The display name as shown in the management console.\n * @param cloud_name {string} A case-insensitive cloud name comprised of alphanumeric and underscore characters.\n *                            Generates an error if the specified cloud name is not unique across all Cloudinary\n *                            accounts. Note: Once created, the name can only be changed for accounts with fewer than\n *                            1000 assets.\n * @param custom_attributes {object} Any custom attributes you want to associate with the sub-account, as a map/hash of\n *                                   key/value pairs.\n * @param enabled {boolean} Whether the sub-account is enabled. Default: true\n * @param base_account {string} The ID of another sub-account, from which to copy all of the following settings:\n *                              Size limits, Timed limits, and Flags.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param callback\n */\n\n\nfunction create_sub_account(name, cloud_name, custom_attributes, enabled, base_account) {\n  let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  let callback = arguments.length > 6 ? arguments[6] : undefined;\n  let params = {\n    cloud_name: cloud_name,\n    name,\n    custom_attributes: custom_attributes,\n    enabled,\n    base_sub_account_id: base_account\n  };\n  options.content_type = \"json\";\n  let uri = ['sub_accounts'];\n  return call_account_api('POST', uri, params, callback, options);\n}\n/**\n * @desc Deletes the specified sub-account. Supported only for accounts with fewer than 1000 assets.\n * @param sub_account_id {string} - The ID of the sub-account to delete.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\n\nfunction delete_sub_account(sub_account_id) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let callback = arguments.length > 2 ? arguments[2] : undefined;\n  let uri = ['sub_accounts', sub_account_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n/**\n * @desc Updates the specified details of the sub-account.\n * @param sub_account_id {string} - The ID of the sub-account.\n * @param [name] {string} - The display name as shown in the management console.\n * @param [cloud_name] {string} - A new cloud name for the account.\n *                                Notes:\n *                                  - Can only be changed for accounts with fewer than 1000 assets.\n *                                  - generates an error if the cloud name is not unique across all Cloudinary accounts.\n * @param [custom_attributes] {object} - Any custom attributes you want to associate with the sub-account, as a map/hash\n *                                       of key/value pairs.\n * @param [enabled] {boolean} - Whether the sub-account is enabled.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\n\nfunction update_sub_account(sub_account_id, name, cloud_name, custom_attributes, enabled) {\n  let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  let callback = arguments.length > 6 ? arguments[6] : undefined;\n  let params = {\n    cloud_name: cloud_name,\n    name,\n    custom_attributes: custom_attributes,\n    enabled\n  };\n  options.content_type = \"json\";\n  let uri = ['sub_accounts', sub_account_id];\n  return call_account_api('PUT', uri, params, callback, options);\n}\n/**\n * @desc Returns the user with the specified ID.\n * @param user_id {string} - The ID of the user.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\n\nfunction user(user_id) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let callback = arguments.length > 2 ? arguments[2] : undefined;\n  let uri = ['users', user_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n/**\n * @desc Lists users in the account.\n * @param [pending] {boolean} - Limit results to pending users (true), users that are not pending (false), or all users (undefined, the default)\n * @param [user_ids] {string[]} - A list of up to 100 user IDs. When provided, other parameters are ignored.\n * @param [prefix] {string} - Returns users where the name or email address begins with the specified case-insensitive\n *                            string.\n * @param [sub_account_id[ {string} - Only returns users who have access to the specified account.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\n\nfunction users(pending, user_ids, prefix, sub_account_id) {\n  let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  let callback = arguments.length > 5 ? arguments[5] : undefined;\n  let uri = ['users'];\n  let params = {\n    ids: user_ids,\n    pending,\n    prefix,\n    sub_account_id\n  };\n  return call_account_api('GET', uri, pickOnlyExistingValues(params, \"ids\", \"pending\", \"prefix\", \"sub_account_id\"), callback, options);\n}\n/**\n * @desc Creates a new user in the account.\n * @param name {string} - The name of the user.\n * @param email {string} - A unique email address, which serves as the login name and notification address.\n * @param role {string} - The role to assign. Possible values: master_admin, admin, billing, technical_admin, reports,\n *                                                             media_library_admin, media_library_user\n * @param [sub_account_ids] {string[]} - The list of sub-account IDs that this user can access.\n *                                       Note: This parameter is ignored if the role is specified as master_admin.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\n\nfunction create_user(name, email, role, sub_account_ids) {\n  let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  let callback = arguments.length > 5 ? arguments[5] : undefined;\n  let uri = ['users'];\n  let params = {\n    name,\n    email,\n    role,\n    sub_account_ids: sub_account_ids\n  };\n  options.content_type = 'json';\n  return call_account_api('POST', uri, params, callback, options);\n}\n/**\n * @desc Updates the details of the specified user.\n * @param user_id {string} - The ID of the user to update.\n * @param [name] {string} - The name of the user.\n * @param [email] {string} - A unique email address, which serves as the login name and notification address.\n * @param [role] {string} - The role to assign. Possible values: master_admin, admin, billing, technical_admin, reports,\n *                                              media_library_admin, media_library_user\n * @param [sub_account_ids] {string[]} - The list of sub-account IDs that this user can access.\n *                                       Note: This parameter is ignored if the role is specified as master_admin.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\n\nfunction update_user(user_id, name, email, role, sub_account_ids) {\n  let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  let callback = arguments.length > 6 ? arguments[6] : undefined;\n  let uri = ['users', user_id];\n  let params = {\n    name,\n    email,\n    role,\n    sub_account_ids: sub_account_ids\n  };\n  options.content_type = 'json';\n  return call_account_api('PUT', uri, params, callback, options);\n}\n/**\n * @desc Deletes an existing user.\n * @param user_id {string} - The ID of the user to delete.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\n\nfunction delete_user(user_id) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let callback = arguments.length > 2 ? arguments[2] : undefined;\n  let uri = ['users', user_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n/**\n * @desc Creates a new user group.\n * @param name {string} - The name for the user group.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\n\nfunction create_user_group(name) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let callback = arguments.length > 2 ? arguments[2] : undefined;\n  let uri = ['user_groups'];\n  options.content_type = 'json';\n  let params = {\n    name\n  };\n  return call_account_api('POST', uri, params, callback, options);\n}\n/**\n * @desc Updates the specified user group.\n * @param group_id {string} The ID of the user group to update.\n * @param name {string} - The name for the user group.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\n\nfunction update_user_group(group_id, name) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let callback = arguments.length > 3 ? arguments[3] : undefined;\n  let uri = ['user_groups', group_id];\n  let params = {\n    name\n  };\n  return call_account_api('PUT', uri, params, callback, options);\n}\n/**\n * @desc Deletes the user group with the specified ID.\n * @param group_id {string} The ID of the user group to delete.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\n\nfunction delete_user_group(group_id) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let callback = arguments.length > 2 ? arguments[2] : undefined;\n  let uri = ['user_groups', group_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n/**\n * @desc Adds a user to a group with the specified ID.\n * @param group_id {string} - The ID of the user group.\n * @param user_id {string} - The ID of the user.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\n\nfunction add_user_to_group(group_id, user_id) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let callback = arguments.length > 3 ? arguments[3] : undefined;\n  let uri = ['user_groups', group_id, 'users', user_id];\n  return call_account_api('POST', uri, {}, callback, options);\n}\n/**\n * @desc Removes a user from a group with the specified ID.\n * @param group_id {string} - The ID of the user group.\n * @param user_id {string} - The ID of the user.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\n\nfunction remove_user_from_group(group_id, user_id) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let callback = arguments.length > 3 ? arguments[3] : undefined;\n  let uri = ['user_groups', group_id, 'users', user_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n/**\n * @desc Retrieves the details of the specified user group.\n * @param group_id {string} - The ID of the user group to retrieve.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\n\nfunction user_group(group_id) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let callback = arguments.length > 2 ? arguments[2] : undefined;\n  let uri = ['user_groups', group_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n/**\n * @desc Lists user groups in the account.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\n\nfunction user_groups() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let callback = arguments.length > 1 ? arguments[1] : undefined;\n  let uri = ['user_groups'];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n/**\n * @desc Lists users in the specified user group.\n * @param group_id {string} - The ID of the user group.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\n\nfunction user_group_users(group_id) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let callback = arguments.length > 2 ? arguments[2] : undefined;\n  let uri = ['user_groups', group_id, 'users'];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\nmodule.exports = {\n  sub_accounts,\n  create_sub_account,\n  delete_sub_account,\n  sub_account,\n  update_sub_account,\n  user,\n  users,\n  user_group,\n  user_groups,\n  user_group_users,\n  remove_user_from_group,\n  delete_user,\n  update_user_group,\n  update_user,\n  create_user,\n  create_user_group,\n  add_user_to_group,\n  delete_user_group\n};","map":{"version":3,"names":["utils","require","call_account_api","pickOnlyExistingValues","sub_accounts","enabled","ids","prefix","options","callback","params","uri","sub_account","sub_account_id","create_sub_account","name","cloud_name","custom_attributes","base_account","base_sub_account_id","content_type","delete_sub_account","update_sub_account","user","user_id","users","pending","user_ids","create_user","email","role","sub_account_ids","update_user","delete_user","create_user_group","update_user_group","group_id","delete_user_group","add_user_to_group","remove_user_from_group","user_group","user_groups","user_group_users","module","exports"],"sources":["/Users/abhinavkumar/Desktop/dbms/client/node_modules/cloudinary/lib/provisioning/account.js"],"sourcesContent":["const utils = require(\"../utils\");\nconst call_account_api = require('../api_client/call_account_api');\n\nconst { pickOnlyExistingValues } = utils;\n\n/**\n * @desc Lists sub-accounts.\n * @param [enabled] {boolean} - Whether to only return enabled sub-accounts (true) or disabled accounts (false).\n *                              Default: all accounts are returned (both enabled and disabled).\n * @param [ids] {number[]} - A list of up to 100 sub-account IDs. When provided, other parameters are ignored.\n * @param [prefix] {string} - Returns accounts where the name begins with the specified case-insensitive string.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction sub_accounts(enabled, ids = [], prefix, options = {}, callback) {\n  let params = {\n    enabled,\n    ids,\n    prefix\n  };\n\n  let uri = ['sub_accounts'];\n  return call_account_api('GET', uri, params, callback, options);\n}\n\n\n/**\n * @desc Retrieves the details of the specified sub-account.\n * @param sub_account_id {string} - The ID of the sub-account.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction sub_account(sub_account_id, options = {}, callback) {\n  let uri = ['sub_accounts', sub_account_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n\n/**\n * @desc Creates a new sub-account. Any users that have access to all sub-accounts will also automatically have access\n *       to the new sub-account.\n * @param name {string} The display name as shown in the management console.\n * @param cloud_name {string} A case-insensitive cloud name comprised of alphanumeric and underscore characters.\n *                            Generates an error if the specified cloud name is not unique across all Cloudinary\n *                            accounts. Note: Once created, the name can only be changed for accounts with fewer than\n *                            1000 assets.\n * @param custom_attributes {object} Any custom attributes you want to associate with the sub-account, as a map/hash of\n *                                   key/value pairs.\n * @param enabled {boolean} Whether the sub-account is enabled. Default: true\n * @param base_account {string} The ID of another sub-account, from which to copy all of the following settings:\n *                              Size limits, Timed limits, and Flags.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param callback\n */\nfunction create_sub_account(name, cloud_name, custom_attributes, enabled, base_account, options = {}, callback) {\n  let params = {\n    cloud_name: cloud_name,\n    name,\n    custom_attributes: custom_attributes,\n    enabled,\n    base_sub_account_id: base_account\n  };\n\n  options.content_type = \"json\";\n  let uri = ['sub_accounts'];\n  return call_account_api('POST', uri, params, callback, options);\n}\n\n/**\n * @desc Deletes the specified sub-account. Supported only for accounts with fewer than 1000 assets.\n * @param sub_account_id {string} - The ID of the sub-account to delete.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction delete_sub_account(sub_account_id, options = {}, callback) {\n  let uri = ['sub_accounts', sub_account_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n\n/**\n * @desc Updates the specified details of the sub-account.\n * @param sub_account_id {string} - The ID of the sub-account.\n * @param [name] {string} - The display name as shown in the management console.\n * @param [cloud_name] {string} - A new cloud name for the account.\n *                                Notes:\n *                                  - Can only be changed for accounts with fewer than 1000 assets.\n *                                  - generates an error if the cloud name is not unique across all Cloudinary accounts.\n * @param [custom_attributes] {object} - Any custom attributes you want to associate with the sub-account, as a map/hash\n *                                       of key/value pairs.\n * @param [enabled] {boolean} - Whether the sub-account is enabled.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction update_sub_account(sub_account_id, name, cloud_name, custom_attributes, enabled, options = {}, callback) {\n  let params = {\n    cloud_name: cloud_name,\n    name,\n    custom_attributes: custom_attributes,\n    enabled\n  };\n\n  options.content_type = \"json\";\n  let uri = ['sub_accounts', sub_account_id];\n  return call_account_api('PUT', uri, params, callback, options);\n}\n\n/**\n * @desc Returns the user with the specified ID.\n * @param user_id {string} - The ID of the user.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction user(user_id, options = {}, callback) {\n  let uri = ['users', user_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n/**\n * @desc Lists users in the account.\n * @param [pending] {boolean} - Limit results to pending users (true), users that are not pending (false), or all users (undefined, the default)\n * @param [user_ids] {string[]} - A list of up to 100 user IDs. When provided, other parameters are ignored.\n * @param [prefix] {string} - Returns users where the name or email address begins with the specified case-insensitive\n *                            string.\n * @param [sub_account_id[ {string} - Only returns users who have access to the specified account.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction users(pending, user_ids, prefix, sub_account_id, options = {}, callback) {\n  let uri = ['users'];\n  let params = {\n    ids: user_ids,\n    pending,\n    prefix,\n    sub_account_id\n  };\n  return call_account_api('GET', uri, pickOnlyExistingValues(params, \"ids\", \"pending\", \"prefix\", \"sub_account_id\"), callback, options);\n}\n\n/**\n * @desc Creates a new user in the account.\n * @param name {string} - The name of the user.\n * @param email {string} - A unique email address, which serves as the login name and notification address.\n * @param role {string} - The role to assign. Possible values: master_admin, admin, billing, technical_admin, reports,\n *                                                             media_library_admin, media_library_user\n * @param [sub_account_ids] {string[]} - The list of sub-account IDs that this user can access.\n *                                       Note: This parameter is ignored if the role is specified as master_admin.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction create_user(name, email, role, sub_account_ids, options = {}, callback) {\n  let uri = ['users'];\n  let params = {\n    name,\n    email,\n    role,\n    sub_account_ids: sub_account_ids\n  };\n  options.content_type = 'json';\n  return call_account_api('POST', uri, params, callback, options);\n}\n\n/**\n * @desc Updates the details of the specified user.\n * @param user_id {string} - The ID of the user to update.\n * @param [name] {string} - The name of the user.\n * @param [email] {string} - A unique email address, which serves as the login name and notification address.\n * @param [role] {string} - The role to assign. Possible values: master_admin, admin, billing, technical_admin, reports,\n *                                              media_library_admin, media_library_user\n * @param [sub_account_ids] {string[]} - The list of sub-account IDs that this user can access.\n *                                       Note: This parameter is ignored if the role is specified as master_admin.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction update_user(user_id, name, email, role, sub_account_ids, options = {}, callback) {\n  let uri = ['users', user_id];\n  let params = {\n    name,\n    email,\n    role,\n    sub_account_ids: sub_account_ids\n  };\n  options.content_type = 'json';\n  return call_account_api('PUT', uri, params, callback, options);\n}\n\n/**\n * @desc Deletes an existing user.\n * @param user_id {string} - The ID of the user to delete.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction delete_user(user_id, options = {}, callback) {\n  let uri = ['users', user_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n\n/**\n * @desc Creates a new user group.\n * @param name {string} - The name for the user group.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction create_user_group(name, options = {}, callback) {\n  let uri = ['user_groups'];\n  options.content_type = 'json';\n  let params = {\n    name\n  };\n  return call_account_api('POST', uri, params, callback, options);\n}\n\n/**\n * @desc Updates the specified user group.\n * @param group_id {string} The ID of the user group to update.\n * @param name {string} - The name for the user group.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction update_user_group(group_id, name, options = {}, callback) {\n  let uri = ['user_groups', group_id];\n  let params = {\n    name\n  };\n  return call_account_api('PUT', uri, params, callback, options);\n}\n\n/**\n * @desc Deletes the user group with the specified ID.\n * @param group_id {string} The ID of the user group to delete.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction delete_user_group(group_id, options = {}, callback) {\n  let uri = ['user_groups', group_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n\n/**\n * @desc Adds a user to a group with the specified ID.\n * @param group_id {string} - The ID of the user group.\n * @param user_id {string} - The ID of the user.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction add_user_to_group(group_id, user_id, options = {}, callback) {\n  let uri = ['user_groups', group_id, 'users', user_id];\n  return call_account_api('POST', uri, {}, callback, options);\n}\n\n/**\n * @desc Removes a user from a group with the specified ID.\n * @param group_id {string} - The ID of the user group.\n * @param user_id {string} - The ID of the user.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction remove_user_from_group(group_id, user_id, options = {}, callback) {\n  let uri = ['user_groups', group_id, 'users', user_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n\n/**\n * @desc Retrieves the details of the specified user group.\n * @param group_id {string} - The ID of the user group to retrieve.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction user_group(group_id, options = {}, callback) {\n  let uri = ['user_groups', group_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n/**\n * @desc Lists user groups in the account.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction user_groups(options = {}, callback) {\n  let uri = ['user_groups'];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n/**\n * @desc Lists users in the specified user group.\n * @param group_id {string} - The ID of the user group.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction user_group_users(group_id, options = {}, callback) {\n  let uri = ['user_groups', group_id, 'users'];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n\nmodule.exports = {\n  sub_accounts,\n  create_sub_account,\n  delete_sub_account,\n  sub_account,\n  update_sub_account,\n  user,\n  users,\n  user_group,\n  user_groups,\n  user_group_users,\n  remove_user_from_group,\n  delete_user,\n  update_user_group,\n  update_user,\n  create_user,\n  create_user_group,\n  add_user_to_group,\n  delete_user_group\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}