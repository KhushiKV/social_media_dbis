{"ast":null,"code":"/**\n * Assign a value to a nested object\n * @function putNestedValue\n * @param params the parent object - this argument will be modified!\n * @param key key in the form nested[innerkey]\n * @param value the value to assign\n * @return the modified params object\n */\nconst url = require('url');\n\nconst extend = require(\"lodash/extend\");\n\nconst isObject = require(\"lodash/isObject\");\n\nconst isString = require(\"lodash/isString\");\n\nconst isUndefined = require(\"lodash/isUndefined\");\n\nconst isEmpty = require(\"lodash/isEmpty\");\n\nconst entries = require('./utils/entries');\n\nlet cloudinary_config = void 0;\n/**\n * Sets a value in an object using a nested key\n * @param {object} params The object to assign the value in.\n * @param {string} key The key of the value. A period is used to denote inner keys.\n * @param {*} value The value to set.\n * @returns {object} The params argument.\n * @example\n *     let o = {foo: {bar: 1}};\n *     putNestedValue(o, 'foo.bar', 2); // {foo: {bar: 2}}\n *     putNestedValue(o, 'foo.inner.key', 'this creates an inner object');\n *     // {{foo: {bar: 2}, inner: {key: 'this creates an inner object'}}}\n */\n\nfunction putNestedValue(params, key, value) {\n  let chain = key.split(/[\\[\\]]+/).filter(i => i.length);\n  let outer = params;\n  let lastKey = chain.pop();\n\n  for (let j = 0; j < chain.length; j++) {\n    let innerKey = chain[j];\n    let inner = outer[innerKey];\n\n    if (inner == null) {\n      inner = {};\n      outer[innerKey] = inner;\n    }\n\n    outer = inner;\n  }\n\n  outer[lastKey] = value;\n  return params;\n}\n\nfunction parseCloudinaryConfigFromEnvURL(ENV_STR) {\n  let conf = {};\n  let uri = url.parse(ENV_STR, true);\n\n  if (uri.protocol === 'cloudinary:') {\n    conf = Object.assign({}, conf, {\n      cloud_name: uri.host,\n      api_key: uri.auth && uri.auth.split(\":\")[0],\n      api_secret: uri.auth && uri.auth.split(\":\")[1],\n      private_cdn: uri.pathname != null,\n      secure_distribution: uri.pathname && uri.pathname.substring(1)\n    });\n  } else if (uri.protocol === 'account:') {\n    conf = Object.assign({}, conf, {\n      account_id: uri.host,\n      provisioning_api_key: uri.auth && uri.auth.split(\":\")[0],\n      provisioning_api_secret: uri.auth && uri.auth.split(\":\")[1]\n    });\n  }\n\n  return conf;\n}\n\nfunction extendCloudinaryConfigFromQuery(ENV_URL) {\n  let confToExtend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let uri = url.parse(ENV_URL, true);\n\n  if (uri.query != null) {\n    entries(uri.query).forEach(_ref => {\n      let [key, value] = _ref;\n      return putNestedValue(confToExtend, key, value);\n    });\n  }\n}\n\nfunction extendCloudinaryConfig(parsedConfig) {\n  let confToExtend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  entries(parsedConfig).forEach(_ref2 => {\n    let [key, value] = _ref2;\n\n    if (value !== undefined) {\n      confToExtend[key] = value;\n    }\n  });\n  return confToExtend;\n}\n\nmodule.exports = function (new_config, new_value) {\n  if (cloudinary_config == null || new_config === true) {\n    if (cloudinary_config == null) {\n      cloudinary_config = {};\n    } else {\n      Object.keys(cloudinary_config).forEach(key => delete cloudinary_config[key]);\n    }\n\n    let CLOUDINARY_ENV_URL = process.env.CLOUDINARY_URL;\n    let CLOUDINARY_ENV_ACCOUNT_URL = process.env.CLOUDINARY_ACCOUNT_URL;\n    let CLOUDINARY_API_PROXY = process.env.CLOUDINARY_API_PROXY;\n\n    if (CLOUDINARY_ENV_URL && !CLOUDINARY_ENV_URL.toLowerCase().startsWith('cloudinary://')) {\n      throw new Error(\"Invalid CLOUDINARY_URL protocol. URL should begin with 'cloudinary://'\");\n    }\n\n    if (CLOUDINARY_ENV_ACCOUNT_URL && !CLOUDINARY_ENV_ACCOUNT_URL.toLowerCase().startsWith('account://')) {\n      throw new Error(\"Invalid CLOUDINARY_ACCOUNT_URL protocol. URL should begin with 'account://'\");\n    }\n\n    if (!isEmpty(CLOUDINARY_API_PROXY)) {\n      extendCloudinaryConfig({\n        api_proxy: CLOUDINARY_API_PROXY\n      }, cloudinary_config);\n    }\n\n    [CLOUDINARY_ENV_URL, CLOUDINARY_ENV_ACCOUNT_URL].forEach(ENV_URL => {\n      if (ENV_URL) {\n        let parsedConfig = parseCloudinaryConfigFromEnvURL(ENV_URL);\n        extendCloudinaryConfig(parsedConfig, cloudinary_config); // Provide Query support in ENV url cloudinary://key:secret@test123?foo[bar]=value\n        // expect(cloudinary_config.foo.bar).to.eql('value')\n\n        extendCloudinaryConfigFromQuery(ENV_URL, cloudinary_config);\n      }\n    });\n  }\n\n  if (!isUndefined(new_value)) {\n    cloudinary_config[new_config] = new_value;\n  } else if (isString(new_config)) {\n    return cloudinary_config[new_config];\n  } else if (isObject(new_config)) {\n    extend(cloudinary_config, new_config);\n  }\n\n  return cloudinary_config;\n};","map":{"version":3,"names":["url","require","extend","isObject","isString","isUndefined","isEmpty","entries","cloudinary_config","putNestedValue","params","key","value","chain","split","filter","i","length","outer","lastKey","pop","j","innerKey","inner","parseCloudinaryConfigFromEnvURL","ENV_STR","conf","uri","parse","protocol","Object","assign","cloud_name","host","api_key","auth","api_secret","private_cdn","pathname","secure_distribution","substring","account_id","provisioning_api_key","provisioning_api_secret","extendCloudinaryConfigFromQuery","ENV_URL","confToExtend","query","forEach","extendCloudinaryConfig","parsedConfig","undefined","module","exports","new_config","new_value","keys","CLOUDINARY_ENV_URL","process","env","CLOUDINARY_URL","CLOUDINARY_ENV_ACCOUNT_URL","CLOUDINARY_ACCOUNT_URL","CLOUDINARY_API_PROXY","toLowerCase","startsWith","Error","api_proxy"],"sources":["/Users/abhinavkumar/Desktop/dbms/client/node_modules/cloudinary/lib/config.js"],"sourcesContent":["/**\n * Assign a value to a nested object\n * @function putNestedValue\n * @param params the parent object - this argument will be modified!\n * @param key key in the form nested[innerkey]\n * @param value the value to assign\n * @return the modified params object\n */\nconst url = require('url');\nconst extend = require(\"lodash/extend\");\nconst isObject = require(\"lodash/isObject\");\nconst isString = require(\"lodash/isString\");\nconst isUndefined = require(\"lodash/isUndefined\");\nconst isEmpty = require(\"lodash/isEmpty\");\nconst entries = require('./utils/entries');\n\nlet cloudinary_config = void 0;\n\n/**\n * Sets a value in an object using a nested key\n * @param {object} params The object to assign the value in.\n * @param {string} key The key of the value. A period is used to denote inner keys.\n * @param {*} value The value to set.\n * @returns {object} The params argument.\n * @example\n *     let o = {foo: {bar: 1}};\n *     putNestedValue(o, 'foo.bar', 2); // {foo: {bar: 2}}\n *     putNestedValue(o, 'foo.inner.key', 'this creates an inner object');\n *     // {{foo: {bar: 2}, inner: {key: 'this creates an inner object'}}}\n */\nfunction putNestedValue(params, key, value) {\n  let chain = key.split(/[\\[\\]]+/).filter(i => i.length);\n  let outer = params;\n  let lastKey = chain.pop();\n  for (let j = 0; j < chain.length; j++) {\n    let innerKey = chain[j];\n    let inner = outer[innerKey];\n    if (inner == null) {\n      inner = {};\n      outer[innerKey] = inner;\n    }\n    outer = inner;\n  }\n  outer[lastKey] = value;\n  return params;\n}\n\nfunction parseCloudinaryConfigFromEnvURL(ENV_STR) {\n  let conf = {};\n\n  let uri = url.parse(ENV_STR, true);\n\n  if (uri.protocol === 'cloudinary:') {\n    conf = Object.assign({}, conf, {\n      cloud_name: uri.host,\n      api_key: uri.auth && uri.auth.split(\":\")[0],\n      api_secret: uri.auth && uri.auth.split(\":\")[1],\n      private_cdn: uri.pathname != null,\n      secure_distribution: uri.pathname && uri.pathname.substring(1)\n    });\n  } else if (uri.protocol === 'account:') {\n    conf = Object.assign({}, conf, {\n      account_id: uri.host,\n      provisioning_api_key: uri.auth && uri.auth.split(\":\")[0],\n      provisioning_api_secret: uri.auth && uri.auth.split(\":\")[1]\n    });\n  }\n\n  return conf;\n}\n\nfunction extendCloudinaryConfigFromQuery(ENV_URL, confToExtend = {}) {\n  let uri = url.parse(ENV_URL, true);\n  if (uri.query != null) {\n    entries(uri.query).forEach(([key, value]) => putNestedValue(confToExtend, key, value));\n  }\n}\n\nfunction extendCloudinaryConfig(parsedConfig, confToExtend = {}) {\n  entries(parsedConfig).forEach(([key, value]) => {\n    if (value !== undefined) {\n      confToExtend[key] = value;\n    }\n  });\n\n  return confToExtend;\n}\n\nmodule.exports = function (new_config, new_value) {\n  if ((cloudinary_config == null) || new_config === true) {\n    if (cloudinary_config == null) {\n      cloudinary_config = {};\n    } else {\n      Object.keys(cloudinary_config).forEach(key => delete cloudinary_config[key]);\n    }\n\n    let CLOUDINARY_ENV_URL = process.env.CLOUDINARY_URL;\n    let CLOUDINARY_ENV_ACCOUNT_URL = process.env.CLOUDINARY_ACCOUNT_URL;\n    let CLOUDINARY_API_PROXY = process.env.CLOUDINARY_API_PROXY;\n\n    if (CLOUDINARY_ENV_URL && !CLOUDINARY_ENV_URL.toLowerCase().startsWith('cloudinary://')) {\n      throw new Error(\"Invalid CLOUDINARY_URL protocol. URL should begin with 'cloudinary://'\");\n    }\n    if (CLOUDINARY_ENV_ACCOUNT_URL && !CLOUDINARY_ENV_ACCOUNT_URL.toLowerCase().startsWith('account://')) {\n      throw new Error(\"Invalid CLOUDINARY_ACCOUNT_URL protocol. URL should begin with 'account://'\");\n    }\n    if (!isEmpty(CLOUDINARY_API_PROXY)) {\n      extendCloudinaryConfig({ api_proxy: CLOUDINARY_API_PROXY }, cloudinary_config);\n    }\n\n    [CLOUDINARY_ENV_URL, CLOUDINARY_ENV_ACCOUNT_URL].forEach((ENV_URL) => {\n      if (ENV_URL) {\n        let parsedConfig = parseCloudinaryConfigFromEnvURL(ENV_URL);\n        extendCloudinaryConfig(parsedConfig, cloudinary_config);\n        // Provide Query support in ENV url cloudinary://key:secret@test123?foo[bar]=value\n        // expect(cloudinary_config.foo.bar).to.eql('value')\n        extendCloudinaryConfigFromQuery(ENV_URL, cloudinary_config);\n      }\n    });\n  }\n  if (!isUndefined(new_value)) {\n    cloudinary_config[new_config] = new_value;\n  } else if (isString(new_config)) {\n    return cloudinary_config[new_config];\n  } else if (isObject(new_config)) {\n    extend(cloudinary_config, new_config);\n  }\n  return cloudinary_config;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}